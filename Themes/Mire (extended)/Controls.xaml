<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:bgc="clr-namespace:BuzzGUI.Common;assembly=BuzzGUI.Common"
	    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=BuzzGUI.Common"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ButtonDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ToggleButtonDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ScrollBarDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ScrollViewerDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ComboBoxDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/NumericUpDownDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ListBoxDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/TabControlDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/SliderDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/TextBoxDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/RadioButtonDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/CheckBoxDark.xaml"/>
		<!-- <ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ListViewDark.xaml"/> -->
		<ResourceDictionary Source="./SimpleStyles/ListViewDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/GroupBoxDark.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/BuzzGUI.Common;component/SimpleStyles/ProgressBarDark.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	

<!--ComboBox-->	
<Color x:Key="ComboBoxDropDownBackground">#333333</Color>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>

            <Border x:Name="Border"
            Grid.ColumnSpan="2"
			BorderBrush="#333333"
			Background="#333333">
            </Border>

            <Border Grid.Column="0" >
                <Border.Background>
                    <SolidColorBrush Color="#333333"/>
                </Border.Background>
            </Border>

            <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                <Path.Fill>
                    <SolidColorBrush Color="#808080"/>
                </Path.Fill>
            </Path>

        </Grid>
    </ControlTemplate>

	    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">

        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>

                        <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,1,20,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"
                            >
                        </ContentPresenter>

                        <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Fade">
                            <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <!--DropDownMenu-->
                                <Border x:Name="DropDownBorder" BorderThickness="1,1,1,1" CornerRadius="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#4e4e4e" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ComboBoxDropDownBackground}" />
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
<!--ComboBox END-->


















  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource SimpleButton}">
    <Setter Property="Background" Value="#333"/>
  </Style>
	<Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SimpleToggleButton}"/>

	<Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#F0F0F0"/>
	</Style>

	<Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="#F0F0F0"/>
	</Style>

	
	<Style x:Key="{x:Type bgc:ComboBoxEx}" TargetType="{x:Type bgc:ComboBoxEx}" BasedOn="{StaticResource ComboBoxDark}"/>
	
	
	

	<Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
		<Setter Property="Background" Value="#595959"/>
	</Style>

	<Style TargetType="{x:Type Image}" x:Key="WindowCloseButtonImageStyle">
		<Setter Property="Source" Value="gfx/WindowClose.png"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Source" Value="gfx/WindowCloseMouseOver.png"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type Window}" x:Key="ThemeWindowStyle">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
          ResizeBorderThickness="6"
          CaptionHeight="22"
          CornerRadius="0,0,0,0"
          GlassFrameThickness="0"/>
			</Setter.Value>
		</Setter>

		<Setter Property="Foreground" Value="#F0F0F0"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderThickness="1" BorderBrush="#545454" Background="#666666" Name="ResizeBorder">
					     <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Margin" Value="8, -16, 8, 8" />
                                        <Setter Property="BorderThickness" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="22"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="#545454" Background="#595959">
								<Grid>
									<TextBlock Text="{TemplateBinding Title}" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="White" FontWeight="Bold"/>
									<Button shell:WindowChrome.IsHitTestVisibleInChrome="True" BorderThickness="0" Padding="0"
										VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,9,0" Width="10" Height="10"
										Command="{x:Static shell:SystemCommands.CloseWindowCommand}">
										<Image Style="{DynamicResource WindowCloseButtonImageStyle}"/>
									</Button>
								</Grid>
							</Border>

							<ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ParameterSliderThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Height" Value="14" />
		<Setter Property="MinWidth" Value="12" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="Thumb" CornerRadius="3" Margin="1" Background="#CCCCCC"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	


	
	<!--ScrollBar-->
      
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"  Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border" CornerRadius="0"
                Background="#808080"
                BorderBrush="pink"
                BorderThickness="0" />
                    <!--Thumb Triggers-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="Background" Value="#cccccc" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="14" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="14" />
            </Grid.RowDefinitions>
           
            <Border Grid.RowSpan="3"
            CornerRadius="0"
            Background="#3d3d3d"
            BorderThickness="0"
            BorderBrush="pink" />
            
            <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="14"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" 
                          />
            
            <Track x:Name="PART_Track" Grid.Row="1"
           IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0">

                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}" Height="14" Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" 
                          />
        </Grid>
    </ControlTemplate>
	
	
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="14" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="14" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
            CornerRadius="0"
            Background="#3d3d3d"
            BorderThickness="0"
            BorderBrush="#222222"
			/>
            
            <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="14"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />               
            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0">


                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            
            <RepeatButton Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="14"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" 
                          />	
        </Grid>
		 
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="14" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="14" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
	


	    <!--Slider Track Controls-->
    <Style x:Key="SliderDecreaseButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Margin="0,2,-2,2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.2,0" EndPoint="1,0" Opacity="0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#00444455" />
                                        <GradientStop Color="#00444455" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderIncreaseButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Slider Thumb-->
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Thumb" BorderThickness="0" CornerRadius="3" BorderBrush="#777777" Margin="1">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#fff1f1f1" />
                                        <GradientStop Color="#ffaaaaaa" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Slider Setup-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border 
      Margin="0"
      CornerRadius="0" 
      Height="2"
      Grid.Row="1"
      Background="#1a1a1a" 
      BorderBrush="#555555"
      BorderThickness="0" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderDecreaseButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderIncreaseButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditFunctionParameterEnabled}" Value="False">
                <Setter Property="Opacity" Value="0.9"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
	
	<!-- List box to the right with machines list -->
	<Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" 
                            BorderBrush="#595959" 
                            BorderThickness="1" 
                            CornerRadius="0"
                            Padding="0">
                        <Border.Background>
                            <SolidColorBrush Color="#333333"/>
                            <!--<ImageBrush ImageSource="WavetableView/gfx/bg2.jpg" />-->
                        </Border.Background>
                        <ScrollViewer x:Name="scrollviewer">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!-- List box item -->
	<Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
	    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
		<Setter Property="Padding" Value="8,0"/>
		<Setter Property="Foreground" Value="#F0F0F0"/>
	<Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
					<Grid Name="Grid" TextBlock.Foreground="{TemplateBinding Foreground}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="MouseOverBorder">
											<EasingColorKeyFrame KeyTime="0" Value="#4A4A4A" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="SelectionBorder">
											<EasingColorKeyFrame KeyTime="0" Value="#5D5D5D" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Grid">
											<EasingColorKeyFrame KeyTime="0" Value="#F0F0F0" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="MouseOverBorder" Background="Transparent"/>
						<Border x:Name="SelectionBorder" Background="Transparent"/>
						<ContentPresenter Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
      </Setter.Value>
    </Setter>
	</Style>
	
	<!-- Text box when manualy type in machine name -->
	    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#eeeeee"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <!--<Setter Property="MaxWidth" Value="166" />-->
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border Name="Border" 
                            BorderBrush="#595959"
                            BorderThickness="1,1,1,0" 
                            CornerRadius="0"
                            Padding="2,2,2,4"
                            VerticalAlignment="Center"
                            >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
		<!-- DataGrid -->
	<Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="#333"/>
        
    </Style>
	<Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="#333"/>
     </Style>

	 
	 
	


</ResourceDictionary>